DAA1

def recur(n):
    # Base case: if n is 0 or 1, return n itself
    if n <= 1:
        return n
    else:
        # Recursive case: F(n) = F(n-1) + F(n-2)
        return recur(n-1) + recur(n-2)

def iterative(n):
    # Initialize the first two Fibonacci numbers
    a = 0
    b = 1
    print(a)  # Print F(0)
    if n > 1:
        print(b)  # Print F(1)

    # Iteratively calculate Fibonacci numbers from F(2) to F(n)
    for i in range(2, n):
        print(a + b)
        a, b = b, a + b  # Update a and b to the next Fibonacci numbers

if __name__ == "__main__":
    # Take user input for the nth number in the Fibonacci series
    num = int(input("Enter the nth number for the series: "))
    
    if num <= 0:
        print("Please enter a positive integer")
    else:
        # Print Fibonacci sequence using recursion
        print("Fibonacci sequence with recursion:")
        for i in range(num):
            print(recur(i))
        
        # Print Fibonacci sequence using iteration
        print("Fibonacci series with iteration:")
        iterative(num)
